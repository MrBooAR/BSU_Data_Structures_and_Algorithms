#include <iostream>
#include <fstream>
#include <vector>
using namespace std;
ifstream fin("input.txt");
ofstream fout("output.txt");
int upperboundf(int* arr, int key, int size) {
    int first = 0;
    int last = size;
    while (last > first) {
        int mid = (first + last) / 2;
        if (arr[mid] >= key) {
            last = mid;
        }
        else {
            first = mid + 1;
        }
    }
    return first;
}
int main() {
	int n;
	fin >> n;
	int* inarr = new int[n];
	for (int i = 0;i < n;i++) {
		fin >> inarr[i];
	}
    int* resarr = new int[n + 1];
    //resarr[0] = inarr[0];
   /* int size = 1;
    int tmp1;
    for (int i = 1;i < n;i++) {
        tmp1 = upperboundf(resarr, inarr[i], size);
        if (tmp1 == size) {
                resarr[i] = inarr[i];
                size++;
        }
        else
        {
            if (inarr[i] < resarr[tmp1]) {
                resarr[tmp1] = inarr[i];
            }
        }
    }
    fout << size;*/
    resarr[0] = INT_MIN;
    for (int i = 1;i <= n;i++) {
        resarr[i] = INT_MAX;
    }
    int tmp1;
    for (int i = 0;i < n;i++) {
        tmp1 = upperboundf(resarr, inarr[i], n + 1);
        if (resarr[tmp1 - 1] < inarr[i] && inarr[i] < resarr[tmp1]) {
            resarr[tmp1] = inarr[i];
        }
    }
    int k = 0;
    for (int i = 1;i <= n;i++) {
        if (resarr[i] == INT_MAX) {
            break;
        }
        else {
            k++;
        }
    }
    fout << k;
    delete[] resarr;
    delete[] inarr;
	return 0;
}
