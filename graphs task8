#include <iostream>
#include <fstream>
#include <vector>
using namespace std;
ifstream fin("input.txt");
ofstream fout("output.txt");
void DFS(int index,int &count, vector<vector<int>> m1, vector<bool>& vis) {
	vis[index] = true;
	count++;
	for (int j = 0;j < m1[index].size();j++) {
		if (vis[m1[index][j]] == false) {
			DFS(m1[index][j], count, m1, vis);
		}
	}
}
int main() {
	int n;
	fin >> n;
	vector<vector<int>> matrix(7);
	vector<bool> iscontain(7, true);
	for (int i = 0;i < n;i++) {
		vector<int> temp;
		pair<int, int> tmp;
		fin >> tmp.first >> tmp.second;
		matrix[tmp.first].push_back(tmp.second);
		matrix[tmp.second].push_back(tmp.first);
		iscontain[tmp.first] = false;
		iscontain[tmp.second] = false;
	}
	int counterv = 0;
	for (int i = 0;i < iscontain.size();i++) {
		if (iscontain[i] == false) {
			counterv++;
		}
	}
	int count = 0;
	for (int start = 0;start < 7;start++) {
		if (iscontain[start] == false) {
			DFS(start, count, matrix, iscontain);
			break;
		}
	}
	if (count != counterv) {
		fout << "No" << endl;
	}
	else {
		bool f = false;
		for (int i = 0;i < 7;i++) {
			int tmpcount = matrix[i].size();
			if (tmpcount % 2 != 0) {
				fout << "No" << endl;
				f = false;
				break;
			}
			else {
				f = true;
			}
		}
		if (f == true) {
			fout << "Yes" << endl;
		}
	}
}
