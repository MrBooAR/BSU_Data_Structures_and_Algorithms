#include <iostream>
#include <fstream>
using namespace std;
ifstream fin("input.txt");
ofstream fout("output.txt");
struct pairxy
{
    int x;
    int y;
    pairxy() {
        x = 0;
        y = 0;
    }
    pairxy(int n1, int m1) {
        x = n1;
        y = m1;
    }
};
int findroot(int* arr,int x) {
    if (arr[x] != x) {
        return findroot(arr,arr[x]);
    }
    else {
        return x;
    }
}
int fununion(int* arr,int x, int y,int size) {
    int rootx = findroot(arr, x); 
    int rooty = findroot(arr, y);
    if (rootx < rooty) {
        arr[rootx] = rooty;
        size--;
    }
    else if (rootx > rooty) {
        arr[rooty] = rootx;
        size--;
    }
    return size;
}
int main() {
    int n, q, size;
    fin >> n >> q;
    size = n;
    if (q != 0) {
        int* arr = new int[n + 1];
        arr[0] = 0;
        pairxy pair;
        for (int i = 1;i < n + 1;i++) {
            arr[i] = i;
        }
        for (int i = 0;i < q;i++) {
            fin >> pair.x >> pair.y;
            size = fununion(arr, pair.x, pair.y, size);
            fout << size << endl;
        }
        delete[] arr;
    }
    else {
        fout << size;
    }
}
